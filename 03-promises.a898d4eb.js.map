{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAWMC,EAASC,SAASC,cAAc,SA0BtC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAIP,SAASQ,EAAUC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC7BU,EAAAjB,GAASkB,OAAOC,QAAQ,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,CAGxE,SAASc,EAAQL,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC3BU,EAAAjB,GAASkB,OAAOI,QAAQ,sBAAqCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,CA3CrEL,EAAOqB,iBAAiB,SAExB,SAAsBC,GAGpB,GAFAA,EAAIC,iBAEwB,WAAxBD,EAAIE,OAAOC,SACf,OAYA,IAVA,IAAMC,EAAW,CACfC,WAAY3B,EAAOK,MAAMuB,MACzBC,KAAM7B,EAAO6B,KAAKD,MAClBE,OAAQ9B,EAAO8B,OAAOF,OAOfG,EAAI,EAAGA,GAAKC,OAAON,EAASI,QAASC,GAAK,EAAE,CACnD,IAAME,EAAYD,OAAON,EAASC,YAAcK,OAAON,EAASG,OAASE,EAAI,GAC7E5B,EAAc4B,EAAGE,GAAWC,KAAKrB,GAAWsB,MAAMhB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// const refs = {\n//   form: document.querySelector('.form'),\n//   firstDelay:document.querySelector('input[name = \"delay\"]'),\n//   step:document.querySelector('input[name = \"step\"]'),\n//   amount:document.querySelector('input[name = \"amount\"]'),\n// };\n\n// refs.form.addEventListener('submit', onFormSubmit);\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('click', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  if (evt.target.nodeName !== 'BUTTON') {\n  return;\n  }\n  const formData = {\n    firstDelay: formEl.delay.value,\n    step: formEl.step.value,\n    amount: formEl.amount.value,\n  };\n\n  // const firstDelay = Number(refs.firstDelay.value);\n  // const step = Number(refs.step.value);\n  // const amount = Number(refs.amount.value);\n  \n  for (let i = 1; i <= Number(formData.amount); i += 1){\n    const delayStep = Number(formData.firstDelay) + Number(formData.step) * (i - 1);\n    createPromise(i, delayStep).then(onSuccess).catch(onError)\n  };\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((fulfill, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        fulfill({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n};\n\nfunction onSuccess({ position, delay }) { \n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nfunction onError({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","fulfill","reject","setTimeout","$ce04d3a99e08e73b$var$onSuccess","param","$parcel$interopDefault","Notify","success","concat","$ce04d3a99e08e73b$var$onError","failure","addEventListener","evt","preventDefault","target","nodeName","formData","firstDelay","value","step","amount","i","Number","delayStep","then","catch"],"version":3,"file":"03-promises.a898d4eb.js.map"}