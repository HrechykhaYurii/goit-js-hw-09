{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAWA,MAAMC,EAASC,SAASC,cAAc,SA0BtC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,SAASQ,GAAUT,SAAEA,EAAQC,MAAEA,IAC7BS,EAAAhB,GAASiB,OAAOC,QAAQ,uBAAqBZ,QAAiBC,M,CAGhE,SAASY,GAAQb,SAAEA,EAAQC,MAAEA,IAC3BS,EAAAhB,GAASiB,OAAOG,QAAQ,sBAAoBd,QAAeC,M,CA3C7DL,EAAOmB,iBAAiB,SAExB,SAAsBC,GAGpB,GAFAA,EAAIC,iBAEwB,WAAxBD,EAAIE,OAAOC,SACf,OAEA,MAAMC,EAAW,CACfC,WAAYzB,EAAOK,MAAMqB,MACzBC,KAAM3B,EAAO2B,KAAKD,MAClBE,OAAQ5B,EAAO4B,OAAOF,OAOxB,IAAK,IAAIG,EAAI,EAAGA,GAAKC,OAAON,EAASI,QAASC,GAAK,EAAE,CACnD,MAAME,EAAYD,OAAON,EAASC,YAAcK,OAAON,EAASG,OAASE,EAAI,GAC7E1B,EAAc0B,EAAGE,GAAWC,KAAKnB,GAAWoB,MAAMhB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// const refs = {\n//   form: document.querySelector('.form'),\n//   firstDelay:document.querySelector('input[name = \"delay\"]'),\n//   step:document.querySelector('input[name = \"step\"]'),\n//   amount:document.querySelector('input[name = \"amount\"]'),\n// };\n\n// refs.form.addEventListener('submit', onFormSubmit);\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('click', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  if (evt.target.nodeName !== 'BUTTON') {\n  return;\n  }\n  const formData = {\n    firstDelay: formEl.delay.value,\n    step: formEl.step.value,\n    amount: formEl.amount.value,\n  };\n\n  // const firstDelay = Number(refs.firstDelay.value);\n  // const step = Number(refs.step.value);\n  // const amount = Number(refs.amount.value);\n  \n  for (let i = 1; i <= Number(formData.amount); i += 1){\n    const delayStep = Number(formData.firstDelay) + Number(formData.step) * (i - 1);\n    createPromise(i, delayStep).then(onSuccess).catch(onError)\n  };\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((fulfill, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        fulfill({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n};\n\nfunction onSuccess({ position, delay }) { \n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nfunction onError({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","fulfill","reject","setTimeout","$47d4ff9957288465$var$onSuccess","$parcel$interopDefault","Notify","success","$47d4ff9957288465$var$onError","failure","addEventListener","evt","preventDefault","target","nodeName","formData","firstDelay","value","step","amount","i","Number","delayStep","then","catch"],"version":3,"file":"03-promises.9db18be9.js.map"}